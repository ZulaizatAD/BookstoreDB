# Dockerfile

# Use an official Python runtime as a parent image
FROM python:3.10-slim-buster

# Set the working directory in the container
WORKDIR /app

# Install system dependencies required for psycopg2-binary (if not using the binary version)
# For psycopg2-binary, these might not be strictly necessary, but good to have for robustness
# if you ever switch back to psycopg2 or other packages need them.
# RUN apt-get update && apt-get install -y --no-install-recommends \
#     gcc \
#     postgresql-client \
#     libpq-dev \
#     && rm -rf /var/lib/apt/lists/*

# Copy the requirements file into the container at /app
COPY requirements.txt .

# Install any needed packages specified in requirements.txt
# Use --no-cache-dir to reduce image size
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application code into the container at /app
# This assumes your main.py, db/, routers/ are in the same directory as Dockerfile
COPY . .

# Make port 8000 available to the world outside this container
EXPOSE 8000

# Run the application using Uvicorn
# main:app refers to the 'app' object in 'main.py'
# --host 0.0.0.0 makes the app accessible from outside the container
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]